@model CreateCostViewModel

@{
    ViewBag.Title = "Create New Cost Record";
}

<div class="row">
    <div class="alert alert-primary col-lg-6 offset-lg-3 mt-5" role="alert">
        <h2>Create Cost Record</h2>
    </div>
    @using (Html.BeginForm("CreateStronglyTypedView", "Cost", FormMethod.Post, new { @class = "col-lg-6 offset-lg-3 border border-1" }))
    {
        <div>
            @Html.LabelFor(m => m.Amount, new { @class = "form-lable" })
            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Amount, "", new { style = "color:red" })
        </div>
        <div>
            @Html.LabelFor(m => m.Date, new { @class = "form-lable" })
            @Html.TextBoxFor(m => m.Date, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Date, "", new { style = "color:red" })
        </div>
        <div>
            @Html.LabelFor(m => m.Category, new { @class = "form-lable" })
            @Html.DropDownListFor(m => m.Category, Model.Categories, "Select a Category", new { @class = "form-control" })
        </div>
        <div>
            @Html.ListBoxFor(m => m.SelectedCategories, Model.Categories, new { @class = "form-select" })
        </div>
        <div>
            @Html.LabelFor(m => m.Comment, new { @class = "form-lable" })
            @Html.TextAreaFor(m => m.Comment, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Comment, "", new { style = "color:red" })
        </div>
        <div>
            @Html.LabelFor(m => m.ConfirmComment, new { @class = "form-lable" })
            @Html.TextAreaFor(m => m.ConfirmComment, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmComment, "", new { style = "color:red" })
        </div>
        <div>
            @Html.Label("PaymentMethods", "Payment Methods", new { @class = "form-lable" })
            @foreach (var PM in Model.PaymentMethods)
            {
                <div class="form-check">
                    @Html.RadioButtonFor(m => m.PaymentMethod, PM.ID, new { @class = "form-check-input" }) @PM.Method
                </div>
            }
        </div>
        <div class="form-check">
            @Html.CheckBoxFor(m => m.MakeFormClear, new { @class = "form-check-input" }) Make Form Clear after Submission
        </div>
        <div class="mt-2">
            <button type="submit" class="btn btn-primary btn-block mb-1">Create</button>
        </div>
    }

</div>